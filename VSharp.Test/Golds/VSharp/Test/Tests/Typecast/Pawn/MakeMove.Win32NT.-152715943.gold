METHOD: VSharp.Test.Tests.Typecast.IMovable VSharp.Test.Tests.Typecast.Pawn.MakeMove(VSharp.Test.Tests.Typecast.Coord)
RESULT: UNION[
	| !(VSharp.Test.Tests.Typecast.Pawn <: (HeapRef this)) ~> (HeapRef λ[MakeMove]_1)
	| (VSharp.Test.Tests.Typecast.Pawn <: (HeapRef this)) ~> (HeapRef this)]
HEAP:
{ heap = merge[
	((VSharp.Test.Tests.Typecast.Pawn <: (HeapRef this)), h0),
	(!(VSharp.Test.Tests.Typecast.Pawn <: (HeapRef this)), app((HeapRef λ[MakeMove]_1)))], statics = merge[
	((VSharp.Test.Tests.Typecast.Pawn <: (HeapRef this)), s1),
	(!(VSharp.Test.Tests.Typecast.Pawn <: (HeapRef this)), app((HeapRef λ[MakeMove]_1)))] } where
---------- h0 = ----------
this ==> CLASS [
	| VSharp.Test.Tests.Typecast.Piece._xCoord ~> VSharp.Test.Tests.Typecast.Coord.X + VSharp.Test.Tests.Typecast.Coord.Y
	| VSharp.Test.Tests.Typecast.Piece._yCoord ~> -VSharp.Test.Tests.Typecast.Coord.Y + VSharp.Test.Tests.Typecast.Coord.X]
---------- s1 = ----------
VSharp.Test.Tests.Typecast.Coord ==> STRUCT VSharp.Test.Tests.Typecast.Coord[]
VSharp.Test.Tests.Typecast.Pawn ==> CLASS []
