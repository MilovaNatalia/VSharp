(set-option :produce-models true)
(set-option :finite-model-find true)
(set-option :tlimit-per 20000)
(declare-sort Type 0)
(declare-fun func33554503 (Type Type Type)Type)
(declare-const delegate33554565 Type)
(declare-const iserializable33556234 Type)
(declare-const icloneable33554495 Type)
(declare-const multicastdelegate33554567 Type)
(declare-fun func33554502 (Type Type)Type)
(declare-fun dictionary33555602 (Type Type)Type)
(declare-const ideserializationcallback33556230 Type)
(declare-fun ireadonlycollection33555626 (Type)Type)
(declare-const ienumerable33555569 Type)
(declare-fun ienumerable33555622 (Type)Type)
(declare-fun keyvaluepair33555630 (Type Type)Type)
(declare-const valuetype33554777 Type)
(declare-fun ireadonlydictionary33555628 (Type Type)Type)
(declare-const icollection33555565 Type)
(declare-const idictionary33555567 Type)
(declare-fun icollection33555619 (Type)Type)
(declare-fun idictionary33555621 (Type Type)Type)
(declare-fun dogsdelegate33554494 (Type Type)Type)
(declare-const object33554493 Type)
(declare-fun covariant_subtype (Type Type) Bool)
(declare-fun contravariant_subtype (Type Type) Bool)
(declare-fun subtype (Type Type) Bool)
(declare-fun is_reference (Type) Bool)
(declare-fun is_valuetype (Type) Bool)
(declare-fun is_unmanaged (Type) Bool)
(declare-fun default_constructor (Type) Bool)
(assert(default_constructor object33554493))
(assert(forall((a Type) (b Type) (c Type) (d Type) (e Type)) (not(subtype (dictionary33555602 a b) (func33554503 c d e)))))
(assert(forall((a Type) (b Type) (c Type) (d Type) (e Type)) (not(subtype (dogsdelegate33554494 a b) (func33554503 c d e)))))
(assert(forall((a Type) (b Type) (c Type) (d Type) (e Type)) (not(subtype (func33554502 a b) (func33554503 c d e)))))
(assert(forall((a Type) (b Type) (c Type) (d Type) (e Type)) (not(subtype (func33554503 a b c) (dictionary33555602 d e)))))
(assert(forall((a Type) (b Type) (c Type) (d Type) (e Type)) (not(subtype (func33554503 a b c) (dogsdelegate33554494 d e)))))
(assert(forall((a Type) (b Type) (c Type) (d Type) (e Type)) (not(subtype (func33554503 a b c) (func33554502 d e)))))
(assert(forall((a Type) (b Type) (c Type) (d Type) (e Type)) (not(subtype (func33554503 a b c) (idictionary33555621 d e)))))
(assert(forall((a Type) (b Type) (c Type) (d Type) (e Type)) (not(subtype (func33554503 a b c) (ireadonlydictionary33555628 d e)))))
(assert(forall((a Type) (b Type) (c Type) (d Type) (e Type)) (not(subtype (func33554503 a b c) (keyvaluepair33555630 d e)))))
(assert(forall((a Type) (b Type) (c Type) (d Type) (e Type)) (not(subtype (idictionary33555621 a b) (func33554503 c d e)))))
(assert(forall((a Type) (b Type) (c Type) (d Type) (e Type)) (not(subtype (ireadonlydictionary33555628 a b) (func33554503 c d e)))))
(assert(forall((a Type) (b Type) (c Type) (d Type) (e Type)) (not(subtype (keyvaluepair33555630 a b) (func33554503 c d e)))))
(assert(forall((a Type) (b Type) (c Type) (d Type)) (=> (not(subtype (idictionary33555621 a b) (idictionary33555621 c d))) (not(subtype (dictionary33555602 a b) (idictionary33555621 c d))))))
(assert(forall((a Type) (b Type) (c Type) (d Type)) (=> (not(subtype (ireadonlydictionary33555628 a b) (ireadonlydictionary33555628 c d))) (not(subtype (dictionary33555602 a b) (ireadonlydictionary33555628 c d))))))
(assert(forall((a Type) (b Type) (c Type) (d Type)) (=> (subtype (idictionary33555621 a b) (idictionary33555621 c d)) (subtype (dictionary33555602 a b) (idictionary33555621 c d)))))
(assert(forall((a Type) (b Type) (c Type) (d Type)) (=> (subtype (ireadonlydictionary33555628 a b) (ireadonlydictionary33555628 c d)) (subtype (dictionary33555602 a b) (ireadonlydictionary33555628 c d)))))
(assert(forall((a Type) (b Type) (c Type) (d Type)) (not(subtype (dictionary33555602 a b) (dogsdelegate33554494 c d)))))
(assert(forall((a Type) (b Type) (c Type) (d Type)) (not(subtype (dictionary33555602 a b) (func33554502 c d)))))
(assert(forall((a Type) (b Type) (c Type) (d Type)) (not(subtype (dictionary33555602 a b) (keyvaluepair33555630 c d)))))
(assert(forall((a Type) (b Type) (c Type) (d Type)) (not(subtype (dogsdelegate33554494 a b) (dictionary33555602 c d)))))
(assert(forall((a Type) (b Type) (c Type) (d Type)) (not(subtype (dogsdelegate33554494 a b) (func33554502 c d)))))
(assert(forall((a Type) (b Type) (c Type) (d Type)) (not(subtype (dogsdelegate33554494 a b) (idictionary33555621 c d)))))
(assert(forall((a Type) (b Type) (c Type) (d Type)) (not(subtype (dogsdelegate33554494 a b) (ireadonlydictionary33555628 c d)))))
(assert(forall((a Type) (b Type) (c Type) (d Type)) (not(subtype (dogsdelegate33554494 a b) (keyvaluepair33555630 c d)))))
(assert(forall((a Type) (b Type) (c Type) (d Type)) (not(subtype (func33554502 a b) (dictionary33555602 c d)))))
(assert(forall((a Type) (b Type) (c Type) (d Type)) (not(subtype (func33554502 a b) (dogsdelegate33554494 c d)))))
(assert(forall((a Type) (b Type) (c Type) (d Type)) (not(subtype (func33554502 a b) (idictionary33555621 c d)))))
(assert(forall((a Type) (b Type) (c Type) (d Type)) (not(subtype (func33554502 a b) (ireadonlydictionary33555628 c d)))))
(assert(forall((a Type) (b Type) (c Type) (d Type)) (not(subtype (func33554502 a b) (keyvaluepair33555630 c d)))))
(assert(forall((a Type) (b Type) (c Type) (d Type)) (not(subtype (func33554503 a b c) (icollection33555619 d)))))
(assert(forall((a Type) (b Type) (c Type) (d Type)) (not(subtype (func33554503 a b c) (ienumerable33555622 d)))))
(assert(forall((a Type) (b Type) (c Type) (d Type)) (not(subtype (func33554503 a b c) (ireadonlycollection33555626 d)))))
(assert(forall((a Type) (b Type) (c Type) (d Type)) (not(subtype (icollection33555619 a) (func33554503 b c d)))))
(assert(forall((a Type) (b Type) (c Type) (d Type)) (not(subtype (idictionary33555621 a b) (dictionary33555602 c d)))))
(assert(forall((a Type) (b Type) (c Type) (d Type)) (not(subtype (idictionary33555621 a b) (dogsdelegate33554494 c d)))))
(assert(forall((a Type) (b Type) (c Type) (d Type)) (not(subtype (idictionary33555621 a b) (func33554502 c d)))))
(assert(forall((a Type) (b Type) (c Type) (d Type)) (not(subtype (idictionary33555621 a b) (ireadonlydictionary33555628 c d)))))
(assert(forall((a Type) (b Type) (c Type) (d Type)) (not(subtype (idictionary33555621 a b) (keyvaluepair33555630 c d)))))
(assert(forall((a Type) (b Type) (c Type) (d Type)) (not(subtype (ienumerable33555622 a) (func33554503 b c d)))))
(assert(forall((a Type) (b Type) (c Type) (d Type)) (not(subtype (ireadonlycollection33555626 a) (func33554503 b c d)))))
(assert(forall((a Type) (b Type) (c Type) (d Type)) (not(subtype (ireadonlydictionary33555628 a b) (dictionary33555602 c d)))))
(assert(forall((a Type) (b Type) (c Type) (d Type)) (not(subtype (ireadonlydictionary33555628 a b) (dogsdelegate33554494 c d)))))
(assert(forall((a Type) (b Type) (c Type) (d Type)) (not(subtype (ireadonlydictionary33555628 a b) (func33554502 c d)))))
(assert(forall((a Type) (b Type) (c Type) (d Type)) (not(subtype (ireadonlydictionary33555628 a b) (idictionary33555621 c d)))))
(assert(forall((a Type) (b Type) (c Type) (d Type)) (not(subtype (ireadonlydictionary33555628 a b) (keyvaluepair33555630 c d)))))
(assert(forall((a Type) (b Type) (c Type) (d Type)) (not(subtype (keyvaluepair33555630 a b) (dictionary33555602 c d)))))
(assert(forall((a Type) (b Type) (c Type) (d Type)) (not(subtype (keyvaluepair33555630 a b) (dogsdelegate33554494 c d)))))
(assert(forall((a Type) (b Type) (c Type) (d Type)) (not(subtype (keyvaluepair33555630 a b) (func33554502 c d)))))
(assert(forall((a Type) (b Type) (c Type) (d Type)) (not(subtype (keyvaluepair33555630 a b) (idictionary33555621 c d)))))
(assert(forall((a Type) (b Type) (c Type) (d Type)) (not(subtype (keyvaluepair33555630 a b) (ireadonlydictionary33555628 c d)))))
(assert(forall((a Type) (b Type) (c Type)) (=> (not(subtype (icollection33555619 (keyvaluepair33555630 a b)) (icollection33555619 c))) (not(subtype (dictionary33555602 a b) (icollection33555619 c))))))
(assert(forall((a Type) (b Type) (c Type)) (=> (not(subtype (icollection33555619 (keyvaluepair33555630 a b)) (icollection33555619 c))) (not(subtype (idictionary33555621 a b) (icollection33555619 c))))))
(assert(forall((a Type) (b Type) (c Type)) (=> (not(subtype (ienumerable33555622 (keyvaluepair33555630 a b)) (ienumerable33555622 c))) (not(subtype (dictionary33555602 a b) (ienumerable33555622 c))))))
(assert(forall((a Type) (b Type) (c Type)) (=> (not(subtype (ienumerable33555622 (keyvaluepair33555630 a b)) (ienumerable33555622 c))) (not(subtype (idictionary33555621 a b) (ienumerable33555622 c))))))
(assert(forall((a Type) (b Type) (c Type)) (=> (not(subtype (ienumerable33555622 (keyvaluepair33555630 a b)) (ienumerable33555622 c))) (not(subtype (ireadonlydictionary33555628 a b) (ienumerable33555622 c))))))
(assert(forall((a Type) (b Type) (c Type)) (=> (not(subtype (ireadonlycollection33555626 (keyvaluepair33555630 a b)) (ireadonlycollection33555626 c))) (not(subtype (dictionary33555602 a b) (ireadonlycollection33555626 c))))))
(assert(forall((a Type) (b Type) (c Type)) (=> (not(subtype (ireadonlycollection33555626 (keyvaluepair33555630 a b)) (ireadonlycollection33555626 c))) (not(subtype (ireadonlydictionary33555628 a b) (ireadonlycollection33555626 c))))))
(assert(forall((a Type) (b Type) (c Type)) (=> (subtype (icollection33555619 (keyvaluepair33555630 a b)) (icollection33555619 c)) (subtype (dictionary33555602 a b) (icollection33555619 c)))))
(assert(forall((a Type) (b Type) (c Type)) (=> (subtype (icollection33555619 (keyvaluepair33555630 a b)) (icollection33555619 c)) (subtype (idictionary33555621 a b) (icollection33555619 c)))))
(assert(forall((a Type) (b Type) (c Type)) (=> (subtype (ienumerable33555622 (keyvaluepair33555630 a b)) (ienumerable33555622 c)) (subtype (dictionary33555602 a b) (ienumerable33555622 c)))))
(assert(forall((a Type) (b Type) (c Type)) (=> (subtype (ienumerable33555622 (keyvaluepair33555630 a b)) (ienumerable33555622 c)) (subtype (idictionary33555621 a b) (ienumerable33555622 c)))))
(assert(forall((a Type) (b Type) (c Type)) (=> (subtype (ienumerable33555622 (keyvaluepair33555630 a b)) (ienumerable33555622 c)) (subtype (ireadonlydictionary33555628 a b) (ienumerable33555622 c)))))
(assert(forall((a Type) (b Type) (c Type)) (=> (subtype (ireadonlycollection33555626 (keyvaluepair33555630 a b)) (ireadonlycollection33555626 c)) (subtype (dictionary33555602 a b) (ireadonlycollection33555626 c)))))
(assert(forall((a Type) (b Type) (c Type)) (=> (subtype (ireadonlycollection33555626 (keyvaluepair33555630 a b)) (ireadonlycollection33555626 c)) (subtype (ireadonlydictionary33555628 a b) (ireadonlycollection33555626 c)))))
(assert(forall((a Type) (b Type) (c Type)) (is_reference (func33554503 a b c))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype (dogsdelegate33554494 a b) (icollection33555619 c)))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype (dogsdelegate33554494 a b) (ienumerable33555622 c)))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype (dogsdelegate33554494 a b) (ireadonlycollection33555626 c)))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype (func33554502 a b) (icollection33555619 c)))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype (func33554502 a b) (ienumerable33555622 c)))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype (func33554502 a b) (ireadonlycollection33555626 c)))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype (func33554503 a b c) icollection33555565))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype (func33554503 a b c) ideserializationcallback33556230))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype (func33554503 a b c) idictionary33555567))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype (func33554503 a b c) ienumerable33555569))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype (func33554503 a b c) valuetype33554777))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype (icollection33555619 a) (dictionary33555602 b c)))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype (icollection33555619 a) (dogsdelegate33554494 b c)))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype (icollection33555619 a) (func33554502 b c)))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype (icollection33555619 a) (idictionary33555621 b c)))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype (icollection33555619 a) (ireadonlydictionary33555628 b c)))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype (icollection33555619 a) (keyvaluepair33555630 b c)))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype (idictionary33555621 a b) (ireadonlycollection33555626 c)))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype (ienumerable33555622 a) (dictionary33555602 b c)))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype (ienumerable33555622 a) (dogsdelegate33554494 b c)))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype (ienumerable33555622 a) (func33554502 b c)))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype (ienumerable33555622 a) (idictionary33555621 b c)))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype (ienumerable33555622 a) (ireadonlydictionary33555628 b c)))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype (ienumerable33555622 a) (keyvaluepair33555630 b c)))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype (ireadonlycollection33555626 a) (dictionary33555602 b c)))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype (ireadonlycollection33555626 a) (dogsdelegate33554494 b c)))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype (ireadonlycollection33555626 a) (func33554502 b c)))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype (ireadonlycollection33555626 a) (idictionary33555621 b c)))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype (ireadonlycollection33555626 a) (ireadonlydictionary33555628 b c)))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype (ireadonlycollection33555626 a) (keyvaluepair33555630 b c)))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype (ireadonlydictionary33555628 a b) (icollection33555619 c)))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype (keyvaluepair33555630 a b) (icollection33555619 c)))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype (keyvaluepair33555630 a b) (ienumerable33555622 c)))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype (keyvaluepair33555630 a b) (ireadonlycollection33555626 c)))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype delegate33554565 (func33554503 a b c)))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype icloneable33554495 (func33554503 a b c)))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype icollection33555565 (func33554503 a b c)))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype ideserializationcallback33556230 (func33554503 a b c)))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype idictionary33555567 (func33554503 a b c)))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype ienumerable33555569 (func33554503 a b c)))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype iserializable33556234 (func33554503 a b c)))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype multicastdelegate33554567 (func33554503 a b c)))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype object33554493 (func33554503 a b c)))))
(assert(forall((a Type) (b Type) (c Type)) (not(subtype valuetype33554777 (func33554503 a b c)))))
(assert(forall((a Type) (b Type) (c Type)) (subtype (func33554503 a b c) delegate33554565)))
(assert(forall((a Type) (b Type) (c Type)) (subtype (func33554503 a b c) icloneable33554495)))
(assert(forall((a Type) (b Type) (c Type)) (subtype (func33554503 a b c) iserializable33556234)))
(assert(forall((a Type) (b Type) (c Type)) (subtype (func33554503 a b c) multicastdelegate33554567)))
(assert(forall((a Type) (b Type) (c Type)) (subtype (func33554503 a b c) object33554493)))
(assert(forall((a Type) (b Type)) (=> (= a b) (subtype (icollection33555619 a) (icollection33555619 b)))))
(assert(forall((a Type) (b Type)) (=> (and (= a b) (is_valuetype a)) (covariant_subtype a b))))
(assert(forall((a Type) (b Type)) (=> (and (is_reference a) (not(subtype a b))) (not(covariant_subtype a b)))))
(assert(forall((a Type) (b Type)) (=> (and (is_reference a) (subtype a b)) (covariant_subtype a b))))
(assert(forall((a Type) (b Type)) (=> (and (not(= a b)) (is_valuetype a)) (not(covariant_subtype a b)))))
(assert(forall((a Type) (b Type)) (=> (covariant_subtype a b) (subtype (ienumerable33555622 a) (ienumerable33555622 b)))))
(assert(forall((a Type) (b Type)) (=> (covariant_subtype a b) (subtype (ireadonlycollection33555626 a) (ireadonlycollection33555626 b)))))
(assert(forall((a Type) (b Type)) (=> (not(= a b)) (not(subtype (icollection33555619 a) (icollection33555619 b))))))
(assert(forall((a Type) (b Type)) (=> (not(covariant_subtype a b)) (not(subtype (ienumerable33555622 a) (ienumerable33555622 b))))))
(assert(forall((a Type) (b Type)) (=> (not(covariant_subtype a b)) (not(subtype (ireadonlycollection33555626 a) (ireadonlycollection33555626 b))))))
(assert(forall((a Type) (b Type)) (=> (not(subtype (ienumerable33555622 a) (ienumerable33555622 b))) (not(subtype (icollection33555619 a) (ienumerable33555622 b))))))
(assert(forall((a Type) (b Type)) (=> (not(subtype (ienumerable33555622 a) (ienumerable33555622 b))) (not(subtype (ireadonlycollection33555626 a) (ienumerable33555622 b))))))
(assert(forall((a Type) (b Type)) (=> (subtype (ienumerable33555622 a) (ienumerable33555622 b)) (subtype (icollection33555619 a) (ienumerable33555622 b)))))
(assert(forall((a Type) (b Type)) (=> (subtype (ienumerable33555622 a) (ienumerable33555622 b)) (subtype (ireadonlycollection33555626 a) (ienumerable33555622 b)))))
(assert(forall((a Type) (b Type)) (default_constructor (dictionary33555602 a b))))
(assert(forall((a Type) (b Type)) (default_constructor (keyvaluepair33555630 a b))))
(assert(forall((a Type) (b Type)) (is_reference (dictionary33555602 a b))))
(assert(forall((a Type) (b Type)) (is_reference (dogsdelegate33554494 a b))))
(assert(forall((a Type) (b Type)) (is_reference (func33554502 a b))))
(assert(forall((a Type) (b Type)) (is_reference (idictionary33555621 a b))))
(assert(forall((a Type) (b Type)) (is_reference (ireadonlydictionary33555628 a b))))
(assert(forall((a Type) (b Type)) (is_valuetype (keyvaluepair33555630 a b))))
(assert(forall((a Type) (b Type)) (not(subtype (dictionary33555602 a b) delegate33554565))))
(assert(forall((a Type) (b Type)) (not(subtype (dictionary33555602 a b) icloneable33554495))))
(assert(forall((a Type) (b Type)) (not(subtype (dictionary33555602 a b) multicastdelegate33554567))))
(assert(forall((a Type) (b Type)) (not(subtype (dictionary33555602 a b) valuetype33554777))))
(assert(forall((a Type) (b Type)) (not(subtype (dogsdelegate33554494 a b) icollection33555565))))
(assert(forall((a Type) (b Type)) (not(subtype (dogsdelegate33554494 a b) ideserializationcallback33556230))))
(assert(forall((a Type) (b Type)) (not(subtype (dogsdelegate33554494 a b) idictionary33555567))))
(assert(forall((a Type) (b Type)) (not(subtype (dogsdelegate33554494 a b) ienumerable33555569))))
(assert(forall((a Type) (b Type)) (not(subtype (dogsdelegate33554494 a b) valuetype33554777))))
(assert(forall((a Type) (b Type)) (not(subtype (func33554502 a b) icollection33555565))))
(assert(forall((a Type) (b Type)) (not(subtype (func33554502 a b) ideserializationcallback33556230))))
(assert(forall((a Type) (b Type)) (not(subtype (func33554502 a b) idictionary33555567))))
(assert(forall((a Type) (b Type)) (not(subtype (func33554502 a b) ienumerable33555569))))
(assert(forall((a Type) (b Type)) (not(subtype (func33554502 a b) valuetype33554777))))
(assert(forall((a Type) (b Type)) (not(subtype (icollection33555619 a) (ireadonlycollection33555626 b)))))
(assert(forall((a Type) (b Type)) (not(subtype (idictionary33555621 a b) delegate33554565))))
(assert(forall((a Type) (b Type)) (not(subtype (idictionary33555621 a b) icloneable33554495))))
(assert(forall((a Type) (b Type)) (not(subtype (idictionary33555621 a b) icollection33555565))))
(assert(forall((a Type) (b Type)) (not(subtype (idictionary33555621 a b) ideserializationcallback33556230))))
(assert(forall((a Type) (b Type)) (not(subtype (idictionary33555621 a b) idictionary33555567))))
(assert(forall((a Type) (b Type)) (not(subtype (idictionary33555621 a b) iserializable33556234))))
(assert(forall((a Type) (b Type)) (not(subtype (idictionary33555621 a b) multicastdelegate33554567))))
(assert(forall((a Type) (b Type)) (not(subtype (idictionary33555621 a b) valuetype33554777))))
(assert(forall((a Type) (b Type)) (not(subtype (ienumerable33555622 a) (icollection33555619 b)))))
(assert(forall((a Type) (b Type)) (not(subtype (ienumerable33555622 a) (ireadonlycollection33555626 b)))))
(assert(forall((a Type) (b Type)) (not(subtype (ireadonlycollection33555626 a) (icollection33555619 b)))))
(assert(forall((a Type) (b Type)) (not(subtype (ireadonlydictionary33555628 a b) delegate33554565))))
(assert(forall((a Type) (b Type)) (not(subtype (ireadonlydictionary33555628 a b) icloneable33554495))))
(assert(forall((a Type) (b Type)) (not(subtype (ireadonlydictionary33555628 a b) icollection33555565))))
(assert(forall((a Type) (b Type)) (not(subtype (ireadonlydictionary33555628 a b) ideserializationcallback33556230))))
(assert(forall((a Type) (b Type)) (not(subtype (ireadonlydictionary33555628 a b) idictionary33555567))))
(assert(forall((a Type) (b Type)) (not(subtype (ireadonlydictionary33555628 a b) iserializable33556234))))
(assert(forall((a Type) (b Type)) (not(subtype (ireadonlydictionary33555628 a b) multicastdelegate33554567))))
(assert(forall((a Type) (b Type)) (not(subtype (ireadonlydictionary33555628 a b) valuetype33554777))))
(assert(forall((a Type) (b Type)) (not(subtype (keyvaluepair33555630 a b) delegate33554565))))
(assert(forall((a Type) (b Type)) (not(subtype (keyvaluepair33555630 a b) icloneable33554495))))
(assert(forall((a Type) (b Type)) (not(subtype (keyvaluepair33555630 a b) icollection33555565))))
(assert(forall((a Type) (b Type)) (not(subtype (keyvaluepair33555630 a b) ideserializationcallback33556230))))
(assert(forall((a Type) (b Type)) (not(subtype (keyvaluepair33555630 a b) idictionary33555567))))
(assert(forall((a Type) (b Type)) (not(subtype (keyvaluepair33555630 a b) ienumerable33555569))))
(assert(forall((a Type) (b Type)) (not(subtype (keyvaluepair33555630 a b) iserializable33556234))))
(assert(forall((a Type) (b Type)) (not(subtype (keyvaluepair33555630 a b) multicastdelegate33554567))))
(assert(forall((a Type) (b Type)) (not(subtype delegate33554565 (dictionary33555602 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype delegate33554565 (dogsdelegate33554494 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype delegate33554565 (func33554502 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype delegate33554565 (idictionary33555621 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype delegate33554565 (ireadonlydictionary33555628 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype delegate33554565 (keyvaluepair33555630 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype icloneable33554495 (dictionary33555602 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype icloneable33554495 (dogsdelegate33554494 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype icloneable33554495 (func33554502 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype icloneable33554495 (idictionary33555621 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype icloneable33554495 (ireadonlydictionary33555628 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype icloneable33554495 (keyvaluepair33555630 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype icollection33555565 (dictionary33555602 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype icollection33555565 (dogsdelegate33554494 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype icollection33555565 (func33554502 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype icollection33555565 (idictionary33555621 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype icollection33555565 (ireadonlydictionary33555628 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype icollection33555565 (keyvaluepair33555630 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype ideserializationcallback33556230 (dictionary33555602 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype ideserializationcallback33556230 (dogsdelegate33554494 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype ideserializationcallback33556230 (func33554502 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype ideserializationcallback33556230 (idictionary33555621 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype ideserializationcallback33556230 (ireadonlydictionary33555628 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype ideserializationcallback33556230 (keyvaluepair33555630 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype idictionary33555567 (dictionary33555602 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype idictionary33555567 (dogsdelegate33554494 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype idictionary33555567 (func33554502 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype idictionary33555567 (idictionary33555621 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype idictionary33555567 (ireadonlydictionary33555628 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype idictionary33555567 (keyvaluepair33555630 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype ienumerable33555569 (dictionary33555602 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype ienumerable33555569 (dogsdelegate33554494 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype ienumerable33555569 (func33554502 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype ienumerable33555569 (idictionary33555621 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype ienumerable33555569 (ireadonlydictionary33555628 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype ienumerable33555569 (keyvaluepair33555630 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype iserializable33556234 (dictionary33555602 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype iserializable33556234 (dogsdelegate33554494 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype iserializable33556234 (func33554502 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype iserializable33556234 (idictionary33555621 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype iserializable33556234 (ireadonlydictionary33555628 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype iserializable33556234 (keyvaluepair33555630 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype multicastdelegate33554567 (dictionary33555602 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype multicastdelegate33554567 (dogsdelegate33554494 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype multicastdelegate33554567 (func33554502 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype multicastdelegate33554567 (idictionary33555621 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype multicastdelegate33554567 (ireadonlydictionary33555628 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype multicastdelegate33554567 (keyvaluepair33555630 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype object33554493 (dictionary33555602 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype object33554493 (dogsdelegate33554494 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype object33554493 (func33554502 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype object33554493 (idictionary33555621 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype object33554493 (ireadonlydictionary33555628 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype object33554493 (keyvaluepair33555630 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype valuetype33554777 (dictionary33555602 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype valuetype33554777 (dogsdelegate33554494 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype valuetype33554777 (func33554502 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype valuetype33554777 (idictionary33555621 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype valuetype33554777 (ireadonlydictionary33555628 a b)))))
(assert(forall((a Type) (b Type)) (not(subtype valuetype33554777 (keyvaluepair33555630 a b)))))
(assert(forall((a Type) (b Type)) (subtype (dictionary33555602 a b) icollection33555565)))
(assert(forall((a Type) (b Type)) (subtype (dictionary33555602 a b) ideserializationcallback33556230)))
(assert(forall((a Type) (b Type)) (subtype (dictionary33555602 a b) idictionary33555567)))
(assert(forall((a Type) (b Type)) (subtype (dictionary33555602 a b) ienumerable33555569)))
(assert(forall((a Type) (b Type)) (subtype (dictionary33555602 a b) iserializable33556234)))
(assert(forall((a Type) (b Type)) (subtype (dictionary33555602 a b) object33554493)))
(assert(forall((a Type) (b Type)) (subtype (dogsdelegate33554494 a b) delegate33554565)))
(assert(forall((a Type) (b Type)) (subtype (dogsdelegate33554494 a b) icloneable33554495)))
(assert(forall((a Type) (b Type)) (subtype (dogsdelegate33554494 a b) iserializable33556234)))
(assert(forall((a Type) (b Type)) (subtype (dogsdelegate33554494 a b) multicastdelegate33554567)))
(assert(forall((a Type) (b Type)) (subtype (dogsdelegate33554494 a b) object33554493)))
(assert(forall((a Type) (b Type)) (subtype (func33554502 a b) delegate33554565)))
(assert(forall((a Type) (b Type)) (subtype (func33554502 a b) icloneable33554495)))
(assert(forall((a Type) (b Type)) (subtype (func33554502 a b) iserializable33556234)))
(assert(forall((a Type) (b Type)) (subtype (func33554502 a b) multicastdelegate33554567)))
(assert(forall((a Type) (b Type)) (subtype (func33554502 a b) object33554493)))
(assert(forall((a Type) (b Type)) (subtype (idictionary33555621 a b) ienumerable33555569)))
(assert(forall((a Type) (b Type)) (subtype (idictionary33555621 a b) object33554493)))
(assert(forall((a Type) (b Type)) (subtype (ireadonlydictionary33555628 a b) ienumerable33555569)))
(assert(forall((a Type) (b Type)) (subtype (ireadonlydictionary33555628 a b) object33554493)))
(assert(forall((a Type) (b Type)) (subtype (keyvaluepair33555630 a b) object33554493)))
(assert(forall((a Type) (b Type)) (subtype (keyvaluepair33555630 a b) valuetype33554777)))
(assert(forall((a Type) (c Type) (b Type) (d Type)) (=> (and (= a c) (= b d)) (subtype (dictionary33555602 a b) (dictionary33555602 c d)))))
(assert(forall((a Type) (c Type) (b Type) (d Type)) (=> (and (= a c) (= b d)) (subtype (dogsdelegate33554494 a b) (dogsdelegate33554494 c d)))))
(assert(forall((a Type) (c Type) (b Type) (d Type)) (=> (and (= a c) (= b d)) (subtype (idictionary33555621 a b) (idictionary33555621 c d)))))
(assert(forall((a Type) (c Type) (b Type) (d Type)) (=> (and (= a c) (= b d)) (subtype (ireadonlydictionary33555628 a b) (ireadonlydictionary33555628 c d)))))
(assert(forall((a Type) (c Type) (b Type) (d Type)) (=> (and (= a c) (= b d)) (subtype (keyvaluepair33555630 a b) (keyvaluepair33555630 c d)))))
(assert(forall((a Type) (c Type) (b Type) (d Type)) (=> (and (contravariant_subtype a c) (covariant_subtype b d)) (subtype (func33554502 a b) (func33554502 c d)))))
(assert(forall((a Type) (c Type) (b Type) (d Type)) (=> (not(= a c)) (not(subtype (dictionary33555602 a b) (dictionary33555602 c d))))))
(assert(forall((a Type) (c Type) (b Type) (d Type)) (=> (not(= a c)) (not(subtype (dogsdelegate33554494 a b) (dogsdelegate33554494 c d))))))
(assert(forall((a Type) (c Type) (b Type) (d Type)) (=> (not(= a c)) (not(subtype (idictionary33555621 a b) (idictionary33555621 c d))))))
(assert(forall((a Type) (c Type) (b Type) (d Type)) (=> (not(= a c)) (not(subtype (ireadonlydictionary33555628 a b) (ireadonlydictionary33555628 c d))))))
(assert(forall((a Type) (c Type) (b Type) (d Type)) (=> (not(= a c)) (not(subtype (keyvaluepair33555630 a b) (keyvaluepair33555630 c d))))))
(assert(forall((a Type) (c Type) (b Type) (d Type)) (=> (not(contravariant_subtype a c)) (not(subtype (func33554502 a b) (func33554502 c d))))))
(assert(forall((a Type) (d Type) (b Type) (c Type) (e Type) (f Type)) (=> (not(contravariant_subtype a d)) (not(subtype (func33554503 a b c) (func33554503 d e f))))))
(assert(forall((a Type) (d Type) (b Type) (e Type) (c Type) (f Type)) (=> (and (contravariant_subtype a d) (contravariant_subtype b e) (covariant_subtype c f)) (subtype (func33554503 a b c) (func33554503 d e f)))))
(assert(forall((a Type)) (=> false (is_unmanaged a))))
(assert(forall((a Type)) (is_reference (icollection33555619 a))))
(assert(forall((a Type)) (is_reference (ienumerable33555622 a))))
(assert(forall((a Type)) (is_reference (ireadonlycollection33555626 a))))
(assert(forall((a Type)) (not(subtype (icollection33555619 a) delegate33554565))))
(assert(forall((a Type)) (not(subtype (icollection33555619 a) icloneable33554495))))
(assert(forall((a Type)) (not(subtype (icollection33555619 a) icollection33555565))))
(assert(forall((a Type)) (not(subtype (icollection33555619 a) ideserializationcallback33556230))))
(assert(forall((a Type)) (not(subtype (icollection33555619 a) idictionary33555567))))
(assert(forall((a Type)) (not(subtype (icollection33555619 a) iserializable33556234))))
(assert(forall((a Type)) (not(subtype (icollection33555619 a) multicastdelegate33554567))))
(assert(forall((a Type)) (not(subtype (icollection33555619 a) valuetype33554777))))
(assert(forall((a Type)) (not(subtype (ienumerable33555622 a) delegate33554565))))
(assert(forall((a Type)) (not(subtype (ienumerable33555622 a) icloneable33554495))))
(assert(forall((a Type)) (not(subtype (ienumerable33555622 a) icollection33555565))))
(assert(forall((a Type)) (not(subtype (ienumerable33555622 a) ideserializationcallback33556230))))
(assert(forall((a Type)) (not(subtype (ienumerable33555622 a) idictionary33555567))))
(assert(forall((a Type)) (not(subtype (ienumerable33555622 a) iserializable33556234))))
(assert(forall((a Type)) (not(subtype (ienumerable33555622 a) multicastdelegate33554567))))
(assert(forall((a Type)) (not(subtype (ienumerable33555622 a) valuetype33554777))))
(assert(forall((a Type)) (not(subtype (ireadonlycollection33555626 a) delegate33554565))))
(assert(forall((a Type)) (not(subtype (ireadonlycollection33555626 a) icloneable33554495))))
(assert(forall((a Type)) (not(subtype (ireadonlycollection33555626 a) icollection33555565))))
(assert(forall((a Type)) (not(subtype (ireadonlycollection33555626 a) ideserializationcallback33556230))))
(assert(forall((a Type)) (not(subtype (ireadonlycollection33555626 a) idictionary33555567))))
(assert(forall((a Type)) (not(subtype (ireadonlycollection33555626 a) iserializable33556234))))
(assert(forall((a Type)) (not(subtype (ireadonlycollection33555626 a) multicastdelegate33554567))))
(assert(forall((a Type)) (not(subtype (ireadonlycollection33555626 a) valuetype33554777))))
(assert(forall((a Type)) (not(subtype delegate33554565 (icollection33555619 a)))))
(assert(forall((a Type)) (not(subtype delegate33554565 (ienumerable33555622 a)))))
(assert(forall((a Type)) (not(subtype delegate33554565 (ireadonlycollection33555626 a)))))
(assert(forall((a Type)) (not(subtype icloneable33554495 (icollection33555619 a)))))
(assert(forall((a Type)) (not(subtype icloneable33554495 (ienumerable33555622 a)))))
(assert(forall((a Type)) (not(subtype icloneable33554495 (ireadonlycollection33555626 a)))))
(assert(forall((a Type)) (not(subtype icollection33555565 (icollection33555619 a)))))
(assert(forall((a Type)) (not(subtype icollection33555565 (ienumerable33555622 a)))))
(assert(forall((a Type)) (not(subtype icollection33555565 (ireadonlycollection33555626 a)))))
(assert(forall((a Type)) (not(subtype ideserializationcallback33556230 (icollection33555619 a)))))
(assert(forall((a Type)) (not(subtype ideserializationcallback33556230 (ienumerable33555622 a)))))
(assert(forall((a Type)) (not(subtype ideserializationcallback33556230 (ireadonlycollection33555626 a)))))
(assert(forall((a Type)) (not(subtype idictionary33555567 (icollection33555619 a)))))
(assert(forall((a Type)) (not(subtype idictionary33555567 (ienumerable33555622 a)))))
(assert(forall((a Type)) (not(subtype idictionary33555567 (ireadonlycollection33555626 a)))))
(assert(forall((a Type)) (not(subtype ienumerable33555569 (icollection33555619 a)))))
(assert(forall((a Type)) (not(subtype ienumerable33555569 (ienumerable33555622 a)))))
(assert(forall((a Type)) (not(subtype ienumerable33555569 (ireadonlycollection33555626 a)))))
(assert(forall((a Type)) (not(subtype iserializable33556234 (icollection33555619 a)))))
(assert(forall((a Type)) (not(subtype iserializable33556234 (ienumerable33555622 a)))))
(assert(forall((a Type)) (not(subtype iserializable33556234 (ireadonlycollection33555626 a)))))
(assert(forall((a Type)) (not(subtype multicastdelegate33554567 (icollection33555619 a)))))
(assert(forall((a Type)) (not(subtype multicastdelegate33554567 (ienumerable33555622 a)))))
(assert(forall((a Type)) (not(subtype multicastdelegate33554567 (ireadonlycollection33555626 a)))))
(assert(forall((a Type)) (not(subtype object33554493 (icollection33555619 a)))))
(assert(forall((a Type)) (not(subtype object33554493 (ienumerable33555622 a)))))
(assert(forall((a Type)) (not(subtype object33554493 (ireadonlycollection33555626 a)))))
(assert(forall((a Type)) (not(subtype valuetype33554777 (icollection33555619 a)))))
(assert(forall((a Type)) (not(subtype valuetype33554777 (ienumerable33555622 a)))))
(assert(forall((a Type)) (not(subtype valuetype33554777 (ireadonlycollection33555626 a)))))
(assert(forall((a Type)) (subtype (icollection33555619 a) ienumerable33555569)))
(assert(forall((a Type)) (subtype (icollection33555619 a) object33554493)))
(assert(forall((a Type)) (subtype (ienumerable33555622 a) ienumerable33555569)))
(assert(forall((a Type)) (subtype (ienumerable33555622 a) object33554493)))
(assert(forall((a Type)) (subtype (ireadonlycollection33555626 a) ienumerable33555569)))
(assert(forall((a Type)) (subtype (ireadonlycollection33555626 a) object33554493)))
(assert(forall((b Type) (a Type)) (=> (and (= b a) (is_valuetype b)) (contravariant_subtype a b))))
(assert(forall((b Type) (a Type)) (=> (and (is_reference b) (not(subtype b a))) (not(contravariant_subtype a b)))))
(assert(forall((b Type) (a Type)) (=> (and (is_reference b) (subtype b a)) (contravariant_subtype a b))))
(assert(forall((b Type) (a Type)) (=> (and (not(= b a)) (is_valuetype b)) (not(contravariant_subtype a b)))))
(assert(forall((b Type) (d Type) (a Type) (c Type)) (=> (not(= b d)) (not(subtype (dictionary33555602 a b) (dictionary33555602 c d))))))
(assert(forall((b Type) (d Type) (a Type) (c Type)) (=> (not(= b d)) (not(subtype (dogsdelegate33554494 a b) (dogsdelegate33554494 c d))))))
(assert(forall((b Type) (d Type) (a Type) (c Type)) (=> (not(= b d)) (not(subtype (idictionary33555621 a b) (idictionary33555621 c d))))))
(assert(forall((b Type) (d Type) (a Type) (c Type)) (=> (not(= b d)) (not(subtype (ireadonlydictionary33555628 a b) (ireadonlydictionary33555628 c d))))))
(assert(forall((b Type) (d Type) (a Type) (c Type)) (=> (not(= b d)) (not(subtype (keyvaluepair33555630 a b) (keyvaluepair33555630 c d))))))
(assert(forall((b Type) (d Type) (a Type) (c Type)) (=> (not(covariant_subtype b d)) (not(subtype (func33554502 a b) (func33554502 c d))))))
(assert(forall((b Type) (e Type) (a Type) (c Type) (d Type) (f Type)) (=> (not(contravariant_subtype b e)) (not(subtype (func33554503 a b c) (func33554503 d e f))))))
(assert(forall((c Type) (f Type) (a Type) (b Type) (d Type) (e Type)) (=> (not(covariant_subtype c f)) (not(subtype (func33554503 a b c) (func33554503 d e f))))))
(assert(is_reference delegate33554565))
(assert(is_reference icloneable33554495))
(assert(is_reference icollection33555565))
(assert(is_reference ideserializationcallback33556230))
(assert(is_reference idictionary33555567))
(assert(is_reference ienumerable33555569))
(assert(is_reference iserializable33556234))
(assert(is_reference multicastdelegate33554567))
(assert(is_reference object33554493))
(assert(is_reference valuetype33554777))
(assert(not(subtype delegate33554565 icollection33555565)))
(assert(not(subtype delegate33554565 ideserializationcallback33556230)))
(assert(not(subtype delegate33554565 idictionary33555567)))
(assert(not(subtype delegate33554565 ienumerable33555569)))
(assert(not(subtype delegate33554565 multicastdelegate33554567)))
(assert(not(subtype delegate33554565 valuetype33554777)))
(assert(not(subtype icloneable33554495 delegate33554565)))
(assert(not(subtype icloneable33554495 icollection33555565)))
(assert(not(subtype icloneable33554495 ideserializationcallback33556230)))
(assert(not(subtype icloneable33554495 idictionary33555567)))
(assert(not(subtype icloneable33554495 ienumerable33555569)))
(assert(not(subtype icloneable33554495 iserializable33556234)))
(assert(not(subtype icloneable33554495 multicastdelegate33554567)))
(assert(not(subtype icloneable33554495 valuetype33554777)))
(assert(not(subtype icollection33555565 delegate33554565)))
(assert(not(subtype icollection33555565 icloneable33554495)))
(assert(not(subtype icollection33555565 ideserializationcallback33556230)))
(assert(not(subtype icollection33555565 idictionary33555567)))
(assert(not(subtype icollection33555565 iserializable33556234)))
(assert(not(subtype icollection33555565 multicastdelegate33554567)))
(assert(not(subtype icollection33555565 valuetype33554777)))
(assert(not(subtype ideserializationcallback33556230 delegate33554565)))
(assert(not(subtype ideserializationcallback33556230 icloneable33554495)))
(assert(not(subtype ideserializationcallback33556230 icollection33555565)))
(assert(not(subtype ideserializationcallback33556230 idictionary33555567)))
(assert(not(subtype ideserializationcallback33556230 ienumerable33555569)))
(assert(not(subtype ideserializationcallback33556230 iserializable33556234)))
(assert(not(subtype ideserializationcallback33556230 multicastdelegate33554567)))
(assert(not(subtype ideserializationcallback33556230 valuetype33554777)))
(assert(not(subtype idictionary33555567 delegate33554565)))
(assert(not(subtype idictionary33555567 icloneable33554495)))
(assert(not(subtype idictionary33555567 ideserializationcallback33556230)))
(assert(not(subtype idictionary33555567 iserializable33556234)))
(assert(not(subtype idictionary33555567 multicastdelegate33554567)))
(assert(not(subtype idictionary33555567 valuetype33554777)))
(assert(not(subtype ienumerable33555569 delegate33554565)))
(assert(not(subtype ienumerable33555569 icloneable33554495)))
(assert(not(subtype ienumerable33555569 icollection33555565)))
(assert(not(subtype ienumerable33555569 ideserializationcallback33556230)))
(assert(not(subtype ienumerable33555569 idictionary33555567)))
(assert(not(subtype ienumerable33555569 iserializable33556234)))
(assert(not(subtype ienumerable33555569 multicastdelegate33554567)))
(assert(not(subtype ienumerable33555569 valuetype33554777)))
(assert(not(subtype iserializable33556234 delegate33554565)))
(assert(not(subtype iserializable33556234 icloneable33554495)))
(assert(not(subtype iserializable33556234 icollection33555565)))
(assert(not(subtype iserializable33556234 ideserializationcallback33556230)))
(assert(not(subtype iserializable33556234 idictionary33555567)))
(assert(not(subtype iserializable33556234 ienumerable33555569)))
(assert(not(subtype iserializable33556234 multicastdelegate33554567)))
(assert(not(subtype iserializable33556234 valuetype33554777)))
(assert(not(subtype multicastdelegate33554567 icollection33555565)))
(assert(not(subtype multicastdelegate33554567 ideserializationcallback33556230)))
(assert(not(subtype multicastdelegate33554567 idictionary33555567)))
(assert(not(subtype multicastdelegate33554567 ienumerable33555569)))
(assert(not(subtype multicastdelegate33554567 valuetype33554777)))
(assert(not(subtype object33554493 delegate33554565)))
(assert(not(subtype object33554493 icloneable33554495)))
(assert(not(subtype object33554493 icollection33555565)))
(assert(not(subtype object33554493 ideserializationcallback33556230)))
(assert(not(subtype object33554493 idictionary33555567)))
(assert(not(subtype object33554493 ienumerable33555569)))
(assert(not(subtype object33554493 iserializable33556234)))
(assert(not(subtype object33554493 multicastdelegate33554567)))
(assert(not(subtype object33554493 valuetype33554777)))
(assert(not(subtype valuetype33554777 delegate33554565)))
(assert(not(subtype valuetype33554777 icloneable33554495)))
(assert(not(subtype valuetype33554777 icollection33555565)))
(assert(not(subtype valuetype33554777 ideserializationcallback33556230)))
(assert(not(subtype valuetype33554777 idictionary33555567)))
(assert(not(subtype valuetype33554777 ienumerable33555569)))
(assert(not(subtype valuetype33554777 iserializable33556234)))
(assert(not(subtype valuetype33554777 multicastdelegate33554567)))
(assert(subtype delegate33554565 delegate33554565))
(assert(subtype delegate33554565 icloneable33554495))
(assert(subtype delegate33554565 iserializable33556234))
(assert(subtype delegate33554565 object33554493))
(assert(subtype icloneable33554495 icloneable33554495))
(assert(subtype icloneable33554495 object33554493))
(assert(subtype icollection33555565 icollection33555565))
(assert(subtype icollection33555565 ienumerable33555569))
(assert(subtype icollection33555565 object33554493))
(assert(subtype ideserializationcallback33556230 ideserializationcallback33556230))
(assert(subtype ideserializationcallback33556230 object33554493))
(assert(subtype idictionary33555567 icollection33555565))
(assert(subtype idictionary33555567 idictionary33555567))
(assert(subtype idictionary33555567 ienumerable33555569))
(assert(subtype idictionary33555567 object33554493))
(assert(subtype ienumerable33555569 ienumerable33555569))
(assert(subtype ienumerable33555569 object33554493))
(assert(subtype iserializable33556234 iserializable33556234))
(assert(subtype iserializable33556234 object33554493))
(assert(subtype multicastdelegate33554567 delegate33554565))
(assert(subtype multicastdelegate33554567 icloneable33554495))
(assert(subtype multicastdelegate33554567 iserializable33556234))
(assert(subtype multicastdelegate33554567 multicastdelegate33554567))
(assert(subtype multicastdelegate33554567 object33554493))
(assert(subtype object33554493 object33554493))
(assert(subtype valuetype33554777 object33554493))
(assert(subtype valuetype33554777 valuetype33554777))
(assert(forall((d Type) (e Type) (f Type) (g Type) (h Type) (a Type) (b Type) (c Type)) (not (and (subtype d (func33554502 e (dictionary33555602 f g))) (subtype (func33554503 f h e) (func33554503 f (func33554502 f g) f)) (subtype a (dogsdelegate33554494 b c)) (not(subtype a (dogsdelegate33554494 b c)))))))
(check-sat)
(get-model)
