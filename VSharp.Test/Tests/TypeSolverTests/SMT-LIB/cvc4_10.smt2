(set-option :produce-models true)
(set-option :finite-model-find true)
(set-option :tlimit-per 20000)
(declare-sort Type 0)
(declare-fun iqueryable33554759 (Type)Type)
(declare-const iqueryable33554758 Type)
(declare-const ienumerable33555569 Type)
(declare-fun ienumerable33555622 (Type)Type)
(declare-const object33554493 Type)
(declare-fun covariant_subtype (Type Type) Bool)
(declare-fun contravariant_subtype (Type Type) Bool)
(declare-fun subtype (Type Type) Bool)
(declare-fun is_reference (Type) Bool)
(declare-fun is_valuetype (Type) Bool)
(declare-fun is_unmanaged (Type) Bool)
(declare-fun default_constructor (Type) Bool)
(assert(default_constructor object33554493))
(assert(forall((a Type) (b Type)) (=> (and (= a b) (is_valuetype a)) (covariant_subtype a b))))
(assert(forall((a Type) (b Type)) (=> (and (is_reference a) (not(subtype a b))) (not(covariant_subtype a b)))))
(assert(forall((a Type) (b Type)) (=> (and (is_reference a) (subtype a b)) (covariant_subtype a b))))
(assert(forall((a Type) (b Type)) (=> (and (not(= a b)) (is_valuetype a)) (not(covariant_subtype a b)))))
(assert(forall((a Type) (b Type)) (=> (covariant_subtype a b) (subtype (ienumerable33555622 a) (ienumerable33555622 b)))))
(assert(forall((a Type) (b Type)) (=> (covariant_subtype a b) (subtype (iqueryable33554759 a) (iqueryable33554759 b)))))
(assert(forall((a Type) (b Type)) (=> (not(covariant_subtype a b)) (not(subtype (ienumerable33555622 a) (ienumerable33555622 b))))))
(assert(forall((a Type) (b Type)) (=> (not(covariant_subtype a b)) (not(subtype (iqueryable33554759 a) (iqueryable33554759 b))))))
(assert(forall((a Type) (b Type)) (=> (not(subtype (ienumerable33555622 a) (ienumerable33555622 b))) (not(subtype (iqueryable33554759 a) (ienumerable33555622 b))))))
(assert(forall((a Type) (b Type)) (=> (subtype (ienumerable33555622 a) (ienumerable33555622 b)) (subtype (iqueryable33554759 a) (ienumerable33555622 b)))))
(assert(forall((a Type) (b Type)) (not(subtype (ienumerable33555622 a) (iqueryable33554759 b)))))
(assert(forall((a Type)) (=> false (is_unmanaged a))))
(assert(forall((a Type)) (=> false (is_valuetype a))))
(assert(forall((a Type)) (is_reference (ienumerable33555622 a))))
(assert(forall((a Type)) (is_reference (iqueryable33554759 a))))
(assert(forall((a Type)) (not(subtype (ienumerable33555622 a) iqueryable33554758))))
(assert(forall((a Type)) (not(subtype ienumerable33555569 (ienumerable33555622 a)))))
(assert(forall((a Type)) (not(subtype ienumerable33555569 (iqueryable33554759 a)))))
(assert(forall((a Type)) (not(subtype iqueryable33554758 (ienumerable33555622 a)))))
(assert(forall((a Type)) (not(subtype iqueryable33554758 (iqueryable33554759 a)))))
(assert(forall((a Type)) (not(subtype object33554493 (ienumerable33555622 a)))))
(assert(forall((a Type)) (not(subtype object33554493 (iqueryable33554759 a)))))
(assert(forall((a Type)) (subtype (ienumerable33555622 a) ienumerable33555569)))
(assert(forall((a Type)) (subtype (ienumerable33555622 a) object33554493)))
(assert(forall((a Type)) (subtype (iqueryable33554759 a) ienumerable33555569)))
(assert(forall((a Type)) (subtype (iqueryable33554759 a) iqueryable33554758)))
(assert(forall((a Type)) (subtype (iqueryable33554759 a) object33554493)))
(assert(forall((b Type) (a Type)) (=> (and (= b a) (is_valuetype b)) (contravariant_subtype a b))))
(assert(forall((b Type) (a Type)) (=> (and (is_reference b) (not(subtype b a))) (not(contravariant_subtype a b)))))
(assert(forall((b Type) (a Type)) (=> (and (is_reference b) (subtype b a)) (contravariant_subtype a b))))
(assert(forall((b Type) (a Type)) (=> (and (not(= b a)) (is_valuetype b)) (not(contravariant_subtype a b)))))
(assert(is_reference ienumerable33555569))
(assert(is_reference iqueryable33554758))
(assert(is_reference object33554493))
(assert(not(subtype ienumerable33555569 iqueryable33554758)))
(assert(not(subtype object33554493 ienumerable33555569)))
(assert(not(subtype object33554493 iqueryable33554758)))
(assert(subtype ienumerable33555569 ienumerable33555569))
(assert(subtype ienumerable33555569 object33554493))
(assert(subtype iqueryable33554758 ienumerable33555569))
(assert(subtype iqueryable33554758 iqueryable33554758))
(assert(subtype iqueryable33554758 object33554493))
(assert(subtype object33554493 object33554493))
(assert(forall((a Type) (b Type)) (not (not(subtype a (iqueryable33554759 b))))))
(check-sat)
(get-model)
