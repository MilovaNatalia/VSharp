(set-option :produce-models true)
(set-option :finite-model-find true)
(set-option :tlimit-per 20000)
(declare-sort Type 0)
(declare-const valuetype33554777 Type)
(declare-const int3233554683 Type)
(declare-fun iequatable33554522 (Type)Type)
(declare-fun icomparable33554521 (Type)Type)
(declare-const iconvertible33554691 Type)
(declare-const iformattable33554672 Type)
(declare-const icomparable33554520 Type)
(declare-fun ia33554436 (Type)Type)
(declare-const sa33554482 Type)
(declare-const sb33554483 Type)
(declare-const ik33554445 Type)
(declare-const sc33554484 Type)
(declare-const object33554493 Type)
(declare-fun covariant_subtype (Type Type) Bool)
(declare-fun contravariant_subtype (Type Type) Bool)
(declare-fun subtype (Type Type) Bool)
(declare-fun is_reference (Type) Bool)
(declare-fun is_valuetype (Type) Bool)
(declare-fun is_unmanaged (Type) Bool)
(declare-fun default_constructor (Type) Bool)
(assert(default_constructor int3233554683))
(assert(default_constructor object33554493))
(assert(default_constructor sa33554482))
(assert(default_constructor sb33554483))
(assert(default_constructor sc33554484))
(assert(forall((a Type) (b Type)) (=> (= a b) (subtype (iequatable33554522 a) (iequatable33554522 b)))))
(assert(forall((a Type) (b Type)) (=> (and (= a b) (is_valuetype a)) (covariant_subtype a b))))
(assert(forall((a Type) (b Type)) (=> (and (is_reference a) (not(subtype a b))) (not(covariant_subtype a b)))))
(assert(forall((a Type) (b Type)) (=> (and (is_reference a) (subtype a b)) (covariant_subtype a b))))
(assert(forall((a Type) (b Type)) (=> (and (not(= a b)) (is_valuetype a)) (not(covariant_subtype a b)))))
(assert(forall((a Type) (b Type)) (=> (contravariant_subtype a b) (subtype (icomparable33554521 a) (icomparable33554521 b)))))
(assert(forall((a Type) (b Type)) (=> (covariant_subtype a b) (subtype (ia33554436 a) (ia33554436 b)))))
(assert(forall((a Type) (b Type)) (=> (not(= a b)) (not(subtype (iequatable33554522 a) (iequatable33554522 b))))))
(assert(forall((a Type) (b Type)) (=> (not(contravariant_subtype a b)) (not(subtype (icomparable33554521 a) (icomparable33554521 b))))))
(assert(forall((a Type) (b Type)) (=> (not(covariant_subtype a b)) (not(subtype (ia33554436 a) (ia33554436 b))))))
(assert(forall((a Type) (b Type)) (not(subtype (ia33554436 a) (icomparable33554521 b)))))
(assert(forall((a Type) (b Type)) (not(subtype (ia33554436 a) (iequatable33554522 b)))))
(assert(forall((a Type) (b Type)) (not(subtype (icomparable33554521 a) (ia33554436 b)))))
(assert(forall((a Type) (b Type)) (not(subtype (icomparable33554521 a) (iequatable33554522 b)))))
(assert(forall((a Type) (b Type)) (not(subtype (iequatable33554522 a) (ia33554436 b)))))
(assert(forall((a Type) (b Type)) (not(subtype (iequatable33554522 a) (icomparable33554521 b)))))
(assert(forall((a Type)) (=> (not(subtype (icomparable33554521 int3233554683) (icomparable33554521 a))) (not(subtype int3233554683 (icomparable33554521 a))))))
(assert(forall((a Type)) (=> (not(subtype (iequatable33554522 int3233554683) (iequatable33554522 a))) (not(subtype int3233554683 (iequatable33554522 a))))))
(assert(forall((a Type)) (=> (subtype (icomparable33554521 int3233554683) (icomparable33554521 a)) (subtype int3233554683 (icomparable33554521 a)))))
(assert(forall((a Type)) (=> (subtype (iequatable33554522 int3233554683) (iequatable33554522 a)) (subtype int3233554683 (iequatable33554522 a)))))
(assert(forall((a Type)) (is_reference (ia33554436 a))))
(assert(forall((a Type)) (is_reference (icomparable33554521 a))))
(assert(forall((a Type)) (is_reference (iequatable33554522 a))))
(assert(forall((a Type)) (not(subtype (ia33554436 a) icomparable33554520))))
(assert(forall((a Type)) (not(subtype (ia33554436 a) iconvertible33554691))))
(assert(forall((a Type)) (not(subtype (ia33554436 a) iformattable33554672))))
(assert(forall((a Type)) (not(subtype (ia33554436 a) ik33554445))))
(assert(forall((a Type)) (not(subtype (ia33554436 a) int3233554683))))
(assert(forall((a Type)) (not(subtype (ia33554436 a) sa33554482))))
(assert(forall((a Type)) (not(subtype (ia33554436 a) sb33554483))))
(assert(forall((a Type)) (not(subtype (ia33554436 a) sc33554484))))
(assert(forall((a Type)) (not(subtype (ia33554436 a) valuetype33554777))))
(assert(forall((a Type)) (not(subtype (icomparable33554521 a) icomparable33554520))))
(assert(forall((a Type)) (not(subtype (icomparable33554521 a) iconvertible33554691))))
(assert(forall((a Type)) (not(subtype (icomparable33554521 a) iformattable33554672))))
(assert(forall((a Type)) (not(subtype (icomparable33554521 a) ik33554445))))
(assert(forall((a Type)) (not(subtype (icomparable33554521 a) int3233554683))))
(assert(forall((a Type)) (not(subtype (icomparable33554521 a) sa33554482))))
(assert(forall((a Type)) (not(subtype (icomparable33554521 a) sb33554483))))
(assert(forall((a Type)) (not(subtype (icomparable33554521 a) sc33554484))))
(assert(forall((a Type)) (not(subtype (icomparable33554521 a) valuetype33554777))))
(assert(forall((a Type)) (not(subtype (iequatable33554522 a) icomparable33554520))))
(assert(forall((a Type)) (not(subtype (iequatable33554522 a) iconvertible33554691))))
(assert(forall((a Type)) (not(subtype (iequatable33554522 a) iformattable33554672))))
(assert(forall((a Type)) (not(subtype (iequatable33554522 a) ik33554445))))
(assert(forall((a Type)) (not(subtype (iequatable33554522 a) int3233554683))))
(assert(forall((a Type)) (not(subtype (iequatable33554522 a) sa33554482))))
(assert(forall((a Type)) (not(subtype (iequatable33554522 a) sb33554483))))
(assert(forall((a Type)) (not(subtype (iequatable33554522 a) sc33554484))))
(assert(forall((a Type)) (not(subtype (iequatable33554522 a) valuetype33554777))))
(assert(forall((a Type)) (not(subtype icomparable33554520 (ia33554436 a)))))
(assert(forall((a Type)) (not(subtype icomparable33554520 (icomparable33554521 a)))))
(assert(forall((a Type)) (not(subtype icomparable33554520 (iequatable33554522 a)))))
(assert(forall((a Type)) (not(subtype iconvertible33554691 (ia33554436 a)))))
(assert(forall((a Type)) (not(subtype iconvertible33554691 (icomparable33554521 a)))))
(assert(forall((a Type)) (not(subtype iconvertible33554691 (iequatable33554522 a)))))
(assert(forall((a Type)) (not(subtype iformattable33554672 (ia33554436 a)))))
(assert(forall((a Type)) (not(subtype iformattable33554672 (icomparable33554521 a)))))
(assert(forall((a Type)) (not(subtype iformattable33554672 (iequatable33554522 a)))))
(assert(forall((a Type)) (not(subtype ik33554445 (ia33554436 a)))))
(assert(forall((a Type)) (not(subtype ik33554445 (icomparable33554521 a)))))
(assert(forall((a Type)) (not(subtype ik33554445 (iequatable33554522 a)))))
(assert(forall((a Type)) (not(subtype int3233554683 (ia33554436 a)))))
(assert(forall((a Type)) (not(subtype object33554493 (ia33554436 a)))))
(assert(forall((a Type)) (not(subtype object33554493 (icomparable33554521 a)))))
(assert(forall((a Type)) (not(subtype object33554493 (iequatable33554522 a)))))
(assert(forall((a Type)) (not(subtype sa33554482 (ia33554436 a)))))
(assert(forall((a Type)) (not(subtype sa33554482 (icomparable33554521 a)))))
(assert(forall((a Type)) (not(subtype sa33554482 (iequatable33554522 a)))))
(assert(forall((a Type)) (not(subtype sb33554483 (ia33554436 a)))))
(assert(forall((a Type)) (not(subtype sb33554483 (icomparable33554521 a)))))
(assert(forall((a Type)) (not(subtype sb33554483 (iequatable33554522 a)))))
(assert(forall((a Type)) (not(subtype sc33554484 (ia33554436 a)))))
(assert(forall((a Type)) (not(subtype sc33554484 (icomparable33554521 a)))))
(assert(forall((a Type)) (not(subtype sc33554484 (iequatable33554522 a)))))
(assert(forall((a Type)) (not(subtype valuetype33554777 (ia33554436 a)))))
(assert(forall((a Type)) (not(subtype valuetype33554777 (icomparable33554521 a)))))
(assert(forall((a Type)) (not(subtype valuetype33554777 (iequatable33554522 a)))))
(assert(forall((a Type)) (subtype (ia33554436 a) object33554493)))
(assert(forall((a Type)) (subtype (icomparable33554521 a) object33554493)))
(assert(forall((a Type)) (subtype (iequatable33554522 a) object33554493)))
(assert(forall((b Type) (a Type)) (=> (and (= b a) (is_valuetype b)) (contravariant_subtype a b))))
(assert(forall((b Type) (a Type)) (=> (and (is_reference b) (not(subtype b a))) (not(contravariant_subtype a b)))))
(assert(forall((b Type) (a Type)) (=> (and (is_reference b) (subtype b a)) (contravariant_subtype a b))))
(assert(forall((b Type) (a Type)) (=> (and (not(= b a)) (is_valuetype b)) (not(contravariant_subtype a b)))))
(assert(is_reference icomparable33554520))
(assert(is_reference iconvertible33554691))
(assert(is_reference iformattable33554672))
(assert(is_reference ik33554445))
(assert(is_reference object33554493))
(assert(is_reference valuetype33554777))
(assert(is_unmanaged int3233554683))
(assert(is_unmanaged sa33554482))
(assert(is_unmanaged sb33554483))
(assert(is_unmanaged sc33554484))
(assert(is_valuetype int3233554683))
(assert(is_valuetype sa33554482))
(assert(is_valuetype sb33554483))
(assert(is_valuetype sc33554484))
(assert(not(subtype icomparable33554520 iconvertible33554691)))
(assert(not(subtype icomparable33554520 iformattable33554672)))
(assert(not(subtype icomparable33554520 ik33554445)))
(assert(not(subtype icomparable33554520 int3233554683)))
(assert(not(subtype icomparable33554520 sa33554482)))
(assert(not(subtype icomparable33554520 sb33554483)))
(assert(not(subtype icomparable33554520 sc33554484)))
(assert(not(subtype icomparable33554520 valuetype33554777)))
(assert(not(subtype iconvertible33554691 icomparable33554520)))
(assert(not(subtype iconvertible33554691 iformattable33554672)))
(assert(not(subtype iconvertible33554691 ik33554445)))
(assert(not(subtype iconvertible33554691 int3233554683)))
(assert(not(subtype iconvertible33554691 sa33554482)))
(assert(not(subtype iconvertible33554691 sb33554483)))
(assert(not(subtype iconvertible33554691 sc33554484)))
(assert(not(subtype iconvertible33554691 valuetype33554777)))
(assert(not(subtype iformattable33554672 icomparable33554520)))
(assert(not(subtype iformattable33554672 iconvertible33554691)))
(assert(not(subtype iformattable33554672 ik33554445)))
(assert(not(subtype iformattable33554672 int3233554683)))
(assert(not(subtype iformattable33554672 sa33554482)))
(assert(not(subtype iformattable33554672 sb33554483)))
(assert(not(subtype iformattable33554672 sc33554484)))
(assert(not(subtype iformattable33554672 valuetype33554777)))
(assert(not(subtype ik33554445 icomparable33554520)))
(assert(not(subtype ik33554445 iconvertible33554691)))
(assert(not(subtype ik33554445 iformattable33554672)))
(assert(not(subtype ik33554445 int3233554683)))
(assert(not(subtype ik33554445 sa33554482)))
(assert(not(subtype ik33554445 sb33554483)))
(assert(not(subtype ik33554445 sc33554484)))
(assert(not(subtype ik33554445 valuetype33554777)))
(assert(not(subtype int3233554683 ik33554445)))
(assert(not(subtype int3233554683 sa33554482)))
(assert(not(subtype int3233554683 sb33554483)))
(assert(not(subtype int3233554683 sc33554484)))
(assert(not(subtype object33554493 icomparable33554520)))
(assert(not(subtype object33554493 iconvertible33554691)))
(assert(not(subtype object33554493 iformattable33554672)))
(assert(not(subtype object33554493 ik33554445)))
(assert(not(subtype object33554493 int3233554683)))
(assert(not(subtype object33554493 sa33554482)))
(assert(not(subtype object33554493 sb33554483)))
(assert(not(subtype object33554493 sc33554484)))
(assert(not(subtype object33554493 valuetype33554777)))
(assert(not(subtype sa33554482 icomparable33554520)))
(assert(not(subtype sa33554482 iconvertible33554691)))
(assert(not(subtype sa33554482 iformattable33554672)))
(assert(not(subtype sa33554482 ik33554445)))
(assert(not(subtype sa33554482 int3233554683)))
(assert(not(subtype sa33554482 sb33554483)))
(assert(not(subtype sa33554482 sc33554484)))
(assert(not(subtype sb33554483 icomparable33554520)))
(assert(not(subtype sb33554483 iconvertible33554691)))
(assert(not(subtype sb33554483 iformattable33554672)))
(assert(not(subtype sb33554483 ik33554445)))
(assert(not(subtype sb33554483 int3233554683)))
(assert(not(subtype sb33554483 sa33554482)))
(assert(not(subtype sb33554483 sc33554484)))
(assert(not(subtype sc33554484 icomparable33554520)))
(assert(not(subtype sc33554484 iconvertible33554691)))
(assert(not(subtype sc33554484 iformattable33554672)))
(assert(not(subtype sc33554484 ik33554445)))
(assert(not(subtype sc33554484 int3233554683)))
(assert(not(subtype sc33554484 sa33554482)))
(assert(not(subtype sc33554484 sb33554483)))
(assert(not(subtype valuetype33554777 icomparable33554520)))
(assert(not(subtype valuetype33554777 iconvertible33554691)))
(assert(not(subtype valuetype33554777 iformattable33554672)))
(assert(not(subtype valuetype33554777 ik33554445)))
(assert(not(subtype valuetype33554777 int3233554683)))
(assert(not(subtype valuetype33554777 sa33554482)))
(assert(not(subtype valuetype33554777 sb33554483)))
(assert(not(subtype valuetype33554777 sc33554484)))
(assert(subtype icomparable33554520 icomparable33554520))
(assert(subtype icomparable33554520 object33554493))
(assert(subtype iconvertible33554691 iconvertible33554691))
(assert(subtype iconvertible33554691 object33554493))
(assert(subtype iformattable33554672 iformattable33554672))
(assert(subtype iformattable33554672 object33554493))
(assert(subtype ik33554445 ik33554445))
(assert(subtype ik33554445 object33554493))
(assert(subtype int3233554683 icomparable33554520))
(assert(subtype int3233554683 iconvertible33554691))
(assert(subtype int3233554683 iformattable33554672))
(assert(subtype int3233554683 int3233554683))
(assert(subtype int3233554683 object33554493))
(assert(subtype int3233554683 valuetype33554777))
(assert(subtype object33554493 object33554493))
(assert(subtype sa33554482 object33554493))
(assert(subtype sa33554482 sa33554482))
(assert(subtype sa33554482 valuetype33554777))
(assert(subtype sb33554483 object33554493))
(assert(subtype sb33554483 sb33554483))
(assert(subtype sb33554483 valuetype33554777))
(assert(subtype sc33554484 object33554493))
(assert(subtype sc33554484 sc33554484))
(assert(subtype sc33554484 valuetype33554777))
(assert(subtype valuetype33554777 object33554493))
(assert(subtype valuetype33554777 valuetype33554777))
(assert(forall((a Type) (b Type) (c Type)) (not (and (not(subtype a sc33554484)) (not(subtype b sc33554484)) (not(subtype a ik33554445)) (not(subtype b ik33554445)) (not(subtype a sb33554483)) (not(subtype b sb33554483)) (not(subtype a sa33554482)) (not(subtype b sa33554482)) (not(subtype a (ia33554436 c))) (not(subtype b (ia33554436 c))) (not(subtype a int3233554683)) (not(subtype b int3233554683)) (not(subtype c valuetype33554777)) (not(subtype c valuetype33554777)) (is_valuetype c) (default_constructor c)))))
(check-sat)
(get-model)
